
一、签名六个月
applet 打包并签名认证。
将 jasperreport 目录下的 jasperreports-3.0.1-applet.jar 解压。在任一磁盘根目录下新建一文件夹 temp，将 jasperreports-3.0.1-applet.jar 解压后的 META-INF、net、default.jasperreports.properties（这个一定要复制，不然会报 NullPointer 异常）全部复制到 temp下，将 test2 项目下的 WEB-INF 下 classes 中的文件 com 也复制到 temp 下。
CMD 命令， E:\temp>
下键入 jar -cvf reportprint.jar *
temp 目录下会生成 reportprint.jar 包。
用keytool生成证书：keytool -genkey -alias printkey -keystore printstore
还是用keytool导出证书：keytool -export -keystore printstore -alias printkey -file print.cer
用jarsigner给reportprint.jar加上数字签名：jarsigner -keystore printstore reportprint.jar printkey

二、指定签名时间(2011-05-31)
JDK的keytool命令是安全钥匙和证书的管理工具，我们常用的命令如下：
-genkey      产生密钥文件,文件中包含用户的公钥、私钥和证书
-alias          产生别名
-keystore    指定密钥仓库名称
-validity      指定创建的证书有效期多少天
-storepass   指定密钥库的密码
-dname       指定证书拥有者信息 例如：  "CN=sagely,OU=atr,O=szu,L=sz,ST=gd,C=cn"
-list            列出系统证书仓库中存在证书名称列表
-export      将别名指定的证书导出到文件  keytool -export -alias caroot -file caroot.crt
-file           参数指定导出到文件的文件名
-delete       删除系统证书库的证书
-import      导入证书到密钥仓库  
以下是生成客户端证书、并对jasperreports-3.0.1-applet.jar  包做签名的命令：


keytool -genkey -validity 1800 -keystore printstore -alias printkey    
keytool -export -keystore printstore -alias printkey  -file print.cer
jarsigner -keystore printstore reportprint.jar  printkey    